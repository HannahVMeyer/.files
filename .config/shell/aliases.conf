alias ls="ls --color=auto"
alias ll='ls -l'
alias la='ls -la'
alias ..='cd ..'
alias dir='ls -ld */'
alias cwd='pwd | pbcopy'
alias gowd='cd "$(pbpaste)"'
alias ql='qlmanage -p 2>&1 > /dev/null'
alias e=$EDITOR
alias ?=man
alias ??=apropos
alias striptags="php -r 'echo strip_tags(file_get_contents(\"php://stdin\"));'"
alias tabulate="column -t -s '	'"
alias bsub-shell='bsub -Is -XF $SHELL'
alias bj=bjobs
alias clean-bash="env -i bash --rcfile /etc/bashrc"

md() {
    mkdir -p "$1" && cd "$1"
}

cpp-new() {
    path=$HOME/Projects/cpp/$(uuidgen)
    md $path
}

sumcol() {
    awk "{ sum+=\$$1 } END { print sum }"
}

ssht() {
    ssh -t "$1" 'tmux attach || tmux new'
}

# Copy file(s) to “dropbox”
drop() {
    cp $@ $HOME/public_html/dropbox
}

rman() {
    if [ $# -ne 1 ]; then
        echo >&2 Usage: rman topic
        return 1
    fi
    script="
        options(pager = "'"'"vim -c 'set ft=rdoc' -"'"'")
        topic <- '$1'
        qualified <- unlist(strsplit(topic, '::'))
        if (length(qualified) == 2)
            do.call(library, list(qualified[1]))
        ?$1
    "
    echo "$script"
    R --vanilla <<< "$script"
}

rcmd() {
    R --vanilla < "$1"
}

# Arguments
# $1 checksum (md5, sha1)
# $2 expected
# $3 filename
verify() {
    expected=$2
    actual=$(openssl $1 "$3" | cut -d'=' -f2 | sed 's/ //g')
    if [ "$expected" != "$actual" ]; then
        echo "Invalid checksum!"
        return 1
    else
        echo "Checksum matches."
        return 0
    fi
}

# vim: ft=sh
